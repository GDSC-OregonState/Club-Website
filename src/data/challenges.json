{
  "weeks": [
    {
      "weekNumber": 2,
      "topic": "Integrated Development Environments",
      "slug": "ide",
      "challenges": [
        {
          "name": "Install IDE",
          "points": 100,
          "description": "Simply install VS Code or another IDE"
        },
        {
          "name": "Theme",
          "points": 25,
          "description": "Set a custom theme for your IDE"
        },
        {
          "name": "Extensions",
          "points": 25,
          "description": "Install at least 1 cool extension for your IDE"
        },
        {
          "name": "Configure your setup",
          "points": 50,
          "description": "Setup your IDE to connect to a remote server. Configure a tasks.json to run a build command. Create your own custom color theme."
        }
      ]
    },
    {
      "weekNumber": 3,
      "topic": "Git",
      "slug": "git",
      "challenges": [
        {
          "name": "Install Git and configure your username and email",
          "points": 50,
          "description": "Install Git on your machine and set up your global username and email using git config commands."
        },
        {
          "name": "Create your first local repository",
          "points": 50,
          "description": "Create a new folder, initialize a Git repository, create a file, stage it, and make your first commit."
        },
        {
          "name": "Push your repository to GitHub",
          "points": 30,
          "description": "Create a new repository on GitHub, connect your local repository to it, and push your commits to the remote repository."
        }
      ]
    },
    {
      "weekNumber": 4,
      "topic": "Kotlin",
      "slug": "kotlin2025",
      "challenges": [
        {
          "name": "Hello World",
          "points": 50,
          "description": "Write a Kotlin function that prints 'Hello, [Your Name]!' to the console. Use string templates"
        },
        {
          "name": "When Expression",
          "points": 50,
          "description": "Write a function to assign a letter grade, given an integer score (out of 100). Use Kotlinâ€™s when expression and ranges."
        },
        {
          "name": "Null Safety",
          "points": 20,
          "description": "Update your hello world greeting function to take a nullable string instead. If the name is null, use 'guest'."
        },
        {
          "name": "Extension Function",
          "points": 20,
          "description": "Create an extension function for the String class that returns string in uppercase with exclamation marks."
        },
        {
          "name": "Kotlin Multiplatform Project",
          "points": 100,
          "description": "Create a simple Kotlin Multiplatform project that runs on at least two targets and uses expect/actual mechanism."
        }
      ]
    },
    {
      "weekNumber": 6,
      "topic": "React",
      "slug": "react",
      "challenges": [
        {
          "name": "Customize Start Page",
          "points": 25,
          "description": "Create a new React project and customize the starter page to add your name."
        },
        {
          "name": "Text Mirror",
          "points": 50,
          "description": "Use the useState concept to create a live mirror of whatever the user is typing into a text box onto the page."
        },
        {
          "name": "Reusable Component",
          "points": 75,
          "description": "Build a reuable photoCard component in a new file. Have the component take in two props, imageURL and name. Add several instances to your page."
        },
        {
          "name": "To-Do List",
          "points": 125,
          "description": "Create a to-do list page using both useState and components."
        }
      ]
    }
  ]
}
